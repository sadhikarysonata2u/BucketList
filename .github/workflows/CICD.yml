name: iOS CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: macos-latest # Use a macOS runner

    steps:
      - uses: actions/checkout@v4 # Checkout the repository code

      # - name: Set up Xcode
      #   run: sudo xcode-select -s /Applications/Xcode_15.0.app

      # - name: Build and Test
      #   run: |
      #     # Build and test using the Xcode project
      #     xcodebuild clean build test \
      #       -project BucketList.xcodeproj \
      #       -scheme BucketList \
      #       -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.6'

      - name: Run Unit Tests
        run: |
          # Run unit tests with xcodebuild, capturing test results
          xcodebuild test \
            -project BucketList.xcodeproj \
            -scheme BucketList \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.6' \
            -enableCodeCoverage YES

      - name: Upload Test Results to GitHub
        if: always()
        run: |
          # Upload test results to GitHub as artifacts or for status tracking
          mkdir -p test-reports
          cp -r ~/Library/Developer/Xcode/DerivedData/BucketList*/Logs/Test/*.xcresult test-reports/
          echo "Test results are uploaded as artifacts"
          # Optionally, you can use GitHub's upload-artifact action if you want to store the results as artifacts
          # - uses: actions/upload-artifact@v3
          #   with:
          #     name: test-results
          #     path: test-reports/
